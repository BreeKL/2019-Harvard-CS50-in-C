/**
 * This is a program to take a credit card number from the user, 
 * and tell the user whether they entered a valid credit card number,
 * and if it is valid, tell them what kind of card it is.
 **/

#include <stdio.h>
#include <cs50.h>

int count(long number);
int firstTwo(long number);
int firstOne(long number);
int luhns(long number);
int AMEX(int cardDigits, int firstNums);
int MC(int cardDigits, int firstNums);
int VISA(int cardDigits, int firstDigit);

int main(void)
{
    int cardDigits, firstNums, firstDigit;
    long number;
    do
    {
        number = get_long("Number: \n");
        cardDigits = count(number);
        printf("%i\n", cardDigits);
        firstNums = firstTwo(number);
        firstDigit = firstOne(number);
    }
    while (cardDigits < 4); //rule out numbers of the wrong length

    
    if (luhns(number) == 1)
    {
        if (AMEX(cardDigits, firstNums) == 1)
        {
            printf("AMEX\n");
        }
        else if (MC(cardDigits, firstNums) == 1)
        {
            printf("MASTERCARD\n");
        }
        else if (VISA(cardDigits, firstDigit) == 1)
        {
            printf("VISA\n");
        }
        else 
        {
            printf("INVALID\n");
        }
    }
    else 
    {
        printf("INVALID\n");
    }
}

//to count the number of digits in the card number
int count(long number)
{
    int count = 0;
    while (number >= 1)
    {
        number = number / 10;
        count = count + 1; 
    }
    return count;
}

//to find the first two digits of the card number
int firstTwo(long number)
{
    long firstTwo = number;
    while (firstTwo > 99)
    {
        firstTwo = firstTwo / 10;
    }
    return firstTwo;
}

//to find the first digit of the card number
int firstOne(long number)
{
    long firstOne = number;
    while (firstOne > 9)
    {
        firstOne = firstOne / 10;
    }
    return firstOne;
}

//check to see if numbers match requirements for AMEX
int AMEX(int cardDigits, int firstNums)
{
    if ((cardDigits == 15) && ((firstNums == 34) || (firstNums == 37)))
    {
        return true;
    }
    else
    {
        return false;
    }
}

//check to see if numbers match requirements for MC
int MC(int cardDigits, int firstNums)
{
    if ((cardDigits == 16) && (51 <= firstNums) && (firstNums <= 55))
    {
        return true;
    }
    else
    {
        return false;
    }
}

//check to see if numbers match requirements for VISA
int VISA(int cardDigits, int firstDigit)
{
    if (((cardDigits == 13) || (cardDigits == 16)) && (firstDigit == 4))
    {
        return true;
    }
    else
    {
        return false;
    }
}

int luhns(long number)
{
    int firstList[8] = {0};
    int i;
    long num = number;
    long number2 = number; 
    
    //find every other digit, starting from second to last
    for (i = 0 ; i < 8; i++)
    {
        if (i == 0)
        {
            num = (num / 10);
            number2 = (num % 10);
            firstList[i] = number2;
        }
        else if (num > 1)
        {
            num = (num / 100);
            number2 = (num % 10);
            firstList[i] = number2;
        }
    }

    //multiply every other digit by 2
    int secondList[16] = {0};
        
    for (i = 0; i < 8; i++) 
    {
        secondList[i] = (firstList[i] * 2);
        
        if (secondList[i] > 9)
        {
            secondList[i + 8] = (secondList[i] % 10);
            secondList[i] = ((secondList[i] / 10) % 10);
        }           
    }
    
    //add digits from secondList
    int sum1 = 0;
    for (i = 0; i < 16; i++)
    {
        sum1 = sum1 + secondList[i];
    }
    
    //add digits left over from the start
    int leftOvers[8] = {0};
    
    num = number;
    number2 = number; 
    
    for (i = 0 ; i < 8; i++)
    {
        if (i == 0)
        {
            number2 = (num % 10);
            leftOvers[i] = number2;
        }
        else if (num > 1)
        {
            num = (num / 100);
            number2 = (num % 10);
            leftOvers[i] = number2;
        }
    }
    
    //add digits from leftOvers
    int sum2 = 0;
    for (i = 0; i < 8; i++)
    {
        sum2 = sum2 + leftOvers[i];
    }
    
    //add sum of second list and sum of left overs
    int sum3 = sum1 + sum2;    
    
    //check that sum3 ends in 0
    if (sum3 % 10 == 0)
    {
        return true;
    }
    else
    {
        return false;
    }
}
